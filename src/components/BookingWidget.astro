---
// src/components/BookingWidget.astro
interface Props {
  reservationsUrl: string;
  pubName: string;
  height?: string;
}

const { reservationsUrl, pubName, height = "800" } = Astro.props;

// Determine the booking system type
let bookingSystem = 'unknown';
let widgetSrc = reservationsUrl;
let needsSpecialHandling = false;

if (reservationsUrl.includes('liveres.co.uk')) {
  bookingSystem = 'liveres';
} else if (reservationsUrl.includes('opentable.com')) {
  bookingSystem = 'opentable';
  // OpenTable might need restaurant ID extraction
  needsSpecialHandling = true;
} else if (reservationsUrl.includes('resdiary.com')) {
  bookingSystem = 'resdiary';
} else if (reservationsUrl.includes('sevenrooms.com')) {
  bookingSystem = 'sevenrooms';
  needsSpecialHandling = true;
}

// Handle special cases for different booking systems
if (bookingSystem === 'opentable' && needsSpecialHandling) {
  // Extract restaurant ID from OpenTable URL if needed
  const match = reservationsUrl.match(/restaurant\/(\d+)/);
  if (match) {
    widgetSrc = `https://www.opentable.com/widget/reservation/loader?rid=${match[1]}&type=standard&theme=standard`;
  }
} else if (bookingSystem === 'sevenrooms' && needsSpecialHandling) {
  // SevenRooms might need venue slug extraction
  const match = reservationsUrl.match(/sevenrooms\.com\/([^\/]+)/);
  if (match) {
    widgetSrc = `https://www.sevenrooms.com/widget/embed/${match[1]}`;
  }
}
---

<div class="booking-widget-container">
  {bookingSystem === 'unknown' ? (
    <div class="text-center p-8 bg-gray-50 rounded-lg">
      <p class="text-lg text-primary/70 mb-4">
        This booking system cannot be embedded directly.
      </p>
      <a 
        href={reservationsUrl} 
        target="_blank" 
        rel="noopener noreferrer"
        class="inline-block bg-green-600 hover:bg-green-700 text-white font-semibold px-6 py-3 rounded-md transition-colors"
      >
        Book on External Site â†’
      </a>
    </div>
  ) : (
    <iframe
      src={widgetSrc}
      width="100%"
      height={height}
      frameborder="0"
      class="w-full rounded-lg shadow-sm booking-iframe"
      title={`Book a table at ${pubName}`}
      loading="lazy"
      tabindex="-1"
      sandbox="allow-forms allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox"
      allow="payment"
    ></iframe>
  )}
</div>

<style>
  .booking-widget-container {
    width: 100%;
    background: white;
    border-radius: 0.5rem;
    overflow: hidden;
  }
</style>

<script>
  // Comprehensive scroll prevention for booking iframes
  (function() {
    // Disable browser scroll restoration immediately
    if ('scrollRestoration' in history) {
      history.scrollRestoration = 'manual';
    }
    
    // Force initial position to top
    window.scrollTo(0, 0);
    
    // Block all scroll attempts during page load
    let blockScroll = true;
    const blockScrollHandler = (e) => {
      if (blockScroll) {
        window.scrollTo(0, 0);
      }
    };
    
    // Add scroll blocker
    window.addEventListener('scroll', blockScrollHandler, { passive: true });
    
    document.addEventListener('DOMContentLoaded', () => {
      const iframes = document.querySelectorAll('.booking-iframe');
      
      iframes.forEach(iframe => {
        // Remove focus ability
        iframe.setAttribute('tabindex', '-1');
        iframe.style.pointerEvents = 'none';
        
        // Handle iframe load
        iframe.addEventListener('load', () => {
          // Keep scroll at top
          window.scrollTo(0, 0);
          
          // Re-enable interaction after load
          setTimeout(() => {
            iframe.style.pointerEvents = 'auto';
          }, 500);
        });
        
        // Block focus events
        iframe.addEventListener('focus', (e) => {
          e.preventDefault();
          e.stopPropagation();
          iframe.blur();
        }, true);
      });
    });
    
    // Multiple load handlers for redundancy
    window.addEventListener('load', () => {
      window.scrollTo(0, 0);
      
      // Release scroll block after everything loads
      setTimeout(() => {
        blockScroll = false;
        window.scrollTo(0, 0);
      }, 1500);
    });
    
    // Additional safeguard
    document.addEventListener('readystatechange', () => {
      if (document.readyState === 'complete') {
        window.scrollTo(0, 0);
      }
    });
  })();
</script>