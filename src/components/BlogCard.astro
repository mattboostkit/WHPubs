---
import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, User, ArrowRight } from 'lucide-react';

interface Props {
  post: {
    title: string;
    slug: { current: string };
    publishedAt?: string;
    excerpt?: string;
    author?: {
      name: string;
      image?: { asset?: { url: string } };
    };
    mainImage?: {
      asset?: { url: string };
      alt?: string;
    };
    categories?: Array<{ title: string }>;
    associatedPub?: {
      name: string;
      slug: { current: string };
    };
  };
  variant?: 'default' | 'compact';
}

const { post, variant = 'default' } = Astro.props;

// Format date
const formatDate = (dateString?: string) => {
  if (!dateString) return '';
  return new Date(dateString).toLocaleDateString('en-GB', {
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });
};

// Determine the post URL
const postUrl = post.associatedPub 
  ? `/pubs/${post.associatedPub.slug.current}/blog/${post.slug.current}`
  : `/blog/${post.slug.current}`;
---

{variant === 'compact' ? (
  <Card className="hover:shadow-lg transition-all duration-300 h-full card-hover">
    <CardContent className="p-4">
      <h3 class="font-semibold text-lg mb-2 line-clamp-2">
        <a href={postUrl} class="text-primary hover:text-secondary transition-colors no-underline">
          {post.title}
        </a>
      </h3>
      {post.publishedAt && (
        <div class="flex items-center text-sm text-gray-600 mb-2">
          <Calendar className="w-4 h-4 mr-1" />
          {formatDate(post.publishedAt)}
        </div>
      )}
      {post.excerpt && (
        <p class="text-sm text-gray-700 line-clamp-2">{post.excerpt}</p>
      )}
    </CardContent>
  </Card>
) : (
  <Card className="overflow-hidden hover:shadow-xl transition-all duration-300 h-full flex flex-col card-hover">
    {post.mainImage?.asset?.url && (
      <div class="h-48 overflow-hidden img-hover-zoom">
        <img
          src={post.mainImage.asset.url}
          alt={post.mainImage.alt || post.title}
          class="w-full h-full object-cover"
          loading="lazy"
          onerror="this.onerror=null; this.src='/images/blog-fallback.jpg';"
        />
      </div>
    )}
    <CardHeader>
      <div class="flex items-start justify-between mb-2">
        <div class="flex-1">
          {post.categories && post.categories.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-2">
              {post.categories.map(category => (
                <Badge variant="secondary" className="text-xs">
                  {category.title}
                </Badge>
              ))}
            </div>
          )}
          <h3 class="text-xl font-semibold line-clamp-2">
            <a href={postUrl} class="text-primary hover:text-secondary transition-colors no-underline">
              {post.title}
            </a>
          </h3>
        </div>
      </div>
      <div class="flex items-center text-sm text-gray-600 space-x-4">
        {post.publishedAt && (
          <div class="flex items-center">
            <Calendar className="w-4 h-4 mr-1" />
            {formatDate(post.publishedAt)}
          </div>
        )}
        {post.author?.name && (
          <div class="flex items-center">
            <User className="w-4 h-4 mr-1" />
            {post.author.name}
          </div>
        )}
      </div>
    </CardHeader>
    <CardContent className="flex-1 flex flex-col">
      {post.excerpt && (
        <p class="text-gray-700 mb-4 line-clamp-3 flex-1">{post.excerpt}</p>
      )}
      <a 
        href={postUrl} 
        class="inline-flex items-center text-secondary font-medium hover:text-secondary/80 transition-colors no-underline"
      >
        Read More
        <ArrowRight className="w-4 h-4 ml-1" />
      </a>
    </CardContent>
  </Card>
)}