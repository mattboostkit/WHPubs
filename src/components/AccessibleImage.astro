---
// Accessible image component with proper alt text handling
export interface Props {
  src: string;
  alt?: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  decoding?: 'sync' | 'async' | 'auto';
  class?: string;
  fallbackSrc?: string;
  isDecorative?: boolean;
}

const { 
  src, 
  alt = '', 
  width, 
  height, 
  loading = 'lazy',
  decoding = 'async',
  class: className = '',
  fallbackSrc = '/images/hero-fallback.jpg',
  isDecorative = false
} = Astro.props;

// If image is decorative, use empty alt and aria-hidden
const imageAlt = isDecorative ? '' : alt;
const ariaHidden = isDecorative ? 'true' : undefined;

// Generate a more descriptive alt text if none provided and not decorative
const finalAlt = !isDecorative && !alt && src 
  ? `Image from ${src.split('/').pop()?.split('.')[0].replace(/[-_]/g, ' ') || 'content'}`
  : imageAlt;
---

<img
  src={src}
  alt={finalAlt}
  width={width}
  height={height}
  loading={loading}
  decoding={decoding}
  class={className}
  aria-hidden={ariaHidden}
  onerror={`this.onerror=null; this.src='${fallbackSrc}'; this.alt='${isDecorative ? '' : 'Image unavailable'}';`}
/>

<style>
  /* Ensure images don't cause layout shift */
  img {
    max-width: 100%;
    height: auto;
  }
  
  /* High contrast mode support */
  @media (prefers-contrast: high) {
    img {
      opacity: 0.9;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    img {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>