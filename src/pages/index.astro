---
import Layout from '../layouts/Layout.astro';
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { MapPin, Clock, Phone, Music, ChefHat, Beer, ExternalLink, Star, Utensils, Dog, TreePine, Wheat } from 'lucide-react';
import { getPubs, getHomepageData, getDevelopmentKitchen, getReviews, getOffers } from '../lib/sanity';
import { HeroCarousel } from '@/components/HeroCarousel';
import { getPubUrl, isExternalUrl } from '@/lib/pub-urls';
import ReviewsSection from '@/components/ReviewsSection.astro';
import OffersSection from '@/components/OffersSection.astro';

// This page always renders the main hub content.

// Fetch data needed for the hub page
const pubs = await getPubs(); // Fetches all pubs
const homepageData = await getHomepageData(); // Fetch homepage content
console.log('Homepage data:', homepageData); // Debug log
let developmentKitchen = null;
try {
  developmentKitchen = await getDevelopmentKitchen(); // Fetch development kitchen data
} catch (error) {
  // Development Kitchen data not available yet
}

// Fetch featured reviews for the homepage
const featuredReviews = await getReviews(null, true); // Get featured general reviews

// Fetch active offers for the homepage
const activeOffers = await getOffers(null, true); // Get active general offers


// All pubs are equal - no featured pubs
const allPubs = pubs;


---

{/* Use homepage title from Sanity if available */}
<Layout title={homepageData?.title || "WH Pubs - Traditional British Pubs"}>
  <main>
    {/* Hero Section with Carousel */}
    <HeroCarousel 
      images={homepageData?.heroImages || (homepageData?.heroImage ? [homepageData.heroImage] : [])}
      heroTitle={homepageData?.heroTitle || 'Traditional British Hospitality in the South East of England'}
      heroSubtitle={homepageData?.heroSubtitle || 'Traditional British Hospitality...'}
      heroButton1Text={homepageData?.heroButton1Text}
      heroButton1Link={homepageData?.heroButton1Link}
      heroButton2Text={homepageData?.heroButton2Text}
      heroButton2Link={homepageData?.heroButton2Link}
      client:load
    />

    {/* Special Offers Section */}
    {activeOffers && activeOffers.length > 0 && (
      <OffersSection offers={activeOffers.slice(0, 6)} />
    )}

    {/* All Pubs Section */}
    <section id="pubs" class="py-20 bg-background">
      <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-center mb-12 text-primary">
          Our Pubs
        </h2>
        <div class="space-y-6">
          {allPubs.length > 0 ? (
            <>
              {/* First row - 3 pubs */}
              <div class="grid md:grid-cols-3 gap-6">
                {allPubs.slice(0, 3).map(pub => (
                  <Card key={pub.slug.current} className="overflow-hidden hover:shadow-lg transition-shadow">
                <div class="relative h-64 overflow-hidden">
                  <img
                    src={pub.heroImage?.asset?.url || pub.image?.asset?.url || '/images/hero-fallback.jpg'}
                    alt={pub.heroImage?.alt || pub.image?.alt || `Image of ${pub.name}`}
                    class="w-full h-full object-cover transition-transform hover:scale-105"
                    onerror="this.onerror=null; this.src='/images/hero-fallback.jpg';"
                  />
                </div>
                <CardHeader>
                  <CardTitle className="text-lg">{pub.name}</CardTitle>
                  <div class="flex items-center text-sm text-muted-foreground">
                    <MapPin className="w-3 h-3 mr-1" />
                    <span>{pub.locationName || pub.location}</span>
                  </div>
                </CardHeader>
                <CardContent>
                  <CardDescription className="text-sm mb-4 line-clamp-2">{pub.description}</CardDescription>
                  
                  {/* Amenity badges */}
                  <div class="flex flex-wrap gap-2 mb-4">
                    {pub.amenities?.includes('dogFriendly') && (
                      <Badge variant="secondary" className="text-xs flex items-center gap-1">
                        <Dog className="w-3 h-3" />
                        Dog Friendly
                      </Badge>
                    )}
                    {pub.amenities?.includes('garden') && (
                      <Badge variant="secondary" className="text-xs flex items-center gap-1">
                        <TreePine className="w-3 h-3" />
                        Garden
                      </Badge>
                    )}
                    {pub.amenities?.includes('localAles') && (
                      <Badge variant="secondary" className="text-xs flex items-center gap-1">
                        <Beer className="w-3 h-3" />
                        Local Ales
                      </Badge>
                    )}
                    {pub.amenities?.includes('food') && (
                      <Badge variant="secondary" className="text-xs flex items-center gap-1">
                        <Utensils className="w-3 h-3" />
                        Food
                      </Badge>
                    )}
                  </div>
                  
                  {(() => {
                    const pubUrl = getPubUrl(pub);
                    const isExt = isExternalUrl(pubUrl);
                    return (
                      <a href={pubUrl} target={isExt ? "_blank" : undefined} rel={isExt ? "noopener noreferrer" : undefined} class="block">
                        <Button variant={isExt ? "default" : "outline"} size="sm" className={isExt ? "w-full bg-primary text-white hover:bg-primary/90" : "w-full"}>
                          {isExt ? 'Visit Website' : 'View Details'}
                          {isExt && <ExternalLink className="w-3 h-3 ml-2" />}
                        </Button>
                      </a>
                    );
                  })()}
                </CardContent>
                  </Card>
                ))}
              </div>
              
              {/* Second row - 2 pubs centered */}
              {allPubs.length > 3 && (
                <div class="grid md:grid-cols-2 gap-6 max-w-4xl mx-auto">
                  {allPubs.slice(3, 5).map(pub => (
                    <Card key={pub.slug.current} className="overflow-hidden hover:shadow-lg transition-shadow">
                      <div class="relative h-64 overflow-hidden">
                        <img
                          src={pub.heroImage?.asset?.url || pub.image?.asset?.url || '/images/hero-fallback.jpg'}
                          alt={pub.heroImage?.alt || pub.image?.alt || `Image of ${pub.name}`}
                          class="w-full h-full object-cover transition-transform hover:scale-105"
                          onerror="this.onerror=null; this.src='/images/hero-fallback.jpg';"
                        />
                      </div>
                      <CardHeader>
                        <CardTitle className="text-lg">{pub.name}</CardTitle>
                        <div class="flex items-center text-sm text-muted-foreground">
                          <MapPin className="w-3 h-3 mr-1" />
                          <span>{pub.locationName || pub.location}</span>
                        </div>
                      </CardHeader>
                      <CardContent>
                        <CardDescription className="text-sm mb-4 line-clamp-2">{pub.description}</CardDescription>
                        
                        {/* Amenity badges */}
                        <div class="flex flex-wrap gap-2 mb-4">
                          {pub.amenities?.includes('dogFriendly') && (
                            <Badge variant="secondary" className="text-xs flex items-center gap-1">
                              <Dog className="w-3 h-3" />
                              Dog Friendly
                            </Badge>
                          )}
                          {pub.amenities?.includes('garden') && (
                            <Badge variant="secondary" className="text-xs flex items-center gap-1">
                              <TreePine className="w-3 h-3" />
                              Garden
                            </Badge>
                          )}
                          {pub.amenities?.includes('localAles') && (
                            <Badge variant="secondary" className="text-xs flex items-center gap-1">
                              <Beer className="w-3 h-3" />
                              Local Ales
                            </Badge>
                          )}
                          {pub.amenities?.includes('food') && (
                            <Badge variant="secondary" className="text-xs flex items-center gap-1">
                              <Utensils className="w-3 h-3" />
                              Food
                            </Badge>
                          )}
                        </div>
                        
                        {
                          (() => {
                            const pubUrl = getPubUrl(pub);
                            const isExt = isExternalUrl(pubUrl);
                            return (
                              <a href={pubUrl} target={isExt ? "_blank" : undefined} rel={isExt ? "noopener noreferrer" : undefined} class="block">
                                <Button variant={isExt ? "default" : "outline"} size="sm" className={isExt ? "w-full bg-primary text-white hover:bg-primary/90" : "w-full"}>
                                  {isExt ? 'Visit Website' : 'View Details'}
                                  {isExt && <ExternalLink className="w-3 h-3 ml-2" />}
                                </Button>
                              </a>
                            );
                          })()
                        }
                      </CardContent>
                    </Card>
                  ))}
                </div>
              )}
            </>
          ) : (
            <p class="text-center text-muted-foreground">
              No pubs found.
            </p>
          )}
        </div>
      </div>
    </section>

    {/* Development Kitchen Section */}
    {developmentKitchen && (
      <section class="py-20 bg-gradient-to-r from-primary to-primary/95 text-secondary">
        <div class="container mx-auto px-4">
          <div class="grid md:grid-cols-2 gap-12 items-center">
            <div>
              <Badge variant="secondary" className="mb-4">Innovation Hub</Badge>
              <h2 class="text-4xl font-bold mb-6 text-secondary">{developmentKitchen.title}</h2>
              <p class="text-lg text-secondary/90 mb-8">
                Where culinary innovation meets tradition. Our Development Kitchen is the creative heart of WH Pubs, 
                crafting seasonal menus that celebrate the finest local ingredients.
              </p>
              <div class="grid grid-cols-2 gap-6 mb-8">
                <div>
                  <h3 class="text-xl font-bold mb-2 text-secondary flex items-center">
                    <Utensils className="w-5 h-5 mr-2" />
                    Menu Innovation
                  </h3>
                  <p class="text-secondary/80 text-sm">Creating seasonal dishes that delight</p>
                </div>
                <div>
                  <h3 class="text-xl font-bold mb-2 text-secondary flex items-center">
                    <MapPin className="w-5 h-5 mr-2" />
                    Local Sourcing
                  </h3>
                  <p class="text-secondary/80 text-sm">Supporting regional producers</p>
                </div>
              </div>
              <a href="/development-kitchen">
                <Button size="lg" variant="secondary" className="bg-secondary text-primary hover:bg-secondary/90">
                  Explore Our Kitchen
                </Button>
              </a>
            </div>
            <div class="relative">
              {developmentKitchen.heroImage && (
                <img
                  src={developmentKitchen.heroImage.asset.url}
                  alt={developmentKitchen.heroImage.alt}
                  class="rounded-lg shadow-2xl w-full"
                />
              )}
              {developmentKitchen.chefProfile && (
                <div class="absolute -bottom-6 -left-6 bg-white rounded-lg shadow-lg p-4 max-w-xs">
                  <p class="text-sm font-semibold text-primary">{developmentKitchen.chefProfile.name}</p>
                  <p class="text-xs text-muted-foreground">{developmentKitchen.chefProfile.title}</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    )}

    {/* Features Section */}
    <section class="py-16 bg-muted/50">
      <div class="container mx-auto px-4">
        <div class="grid md:grid-cols-3 gap-8">
          <div class="text-center">
            <div class="bg-primary/10 w-24 h-24 rounded-full flex items-center justify-center mx-auto mb-4">
              <ChefHat class="w-12 h-12 text-primary" />
            </div>
            <h3 class="text-xl font-bold mb-2 text-primary">Seasonal Menus</h3>
            <p class="text-muted-foreground">Fresh, locally-sourced ingredients prepared by our skilled chefs.</p>
          </div>
          <div class="text-center">
            <div class="bg-primary/10 w-24 h-24 rounded-full flex items-center justify-center mx-auto mb-4">
              <Beer class="w-12 h-12 text-primary" />
            </div>
            <h3 class="text-xl font-bold mb-2 text-primary">Local Ales</h3>
            <p class="text-muted-foreground">Carefully selected craft beers and traditional cask ales.</p>
          </div>
          <div class="text-center">
            <div class="bg-primary/10 w-24 h-24 rounded-full flex items-center justify-center mx-auto mb-4">
              <Music class="w-12 h-12 text-primary" />
            </div>
            <h3 class="text-xl font-bold mb-2 text-primary">Special Events</h3>
            <p class="text-muted-foreground">Regular events, live music, and themed dining experiences.</p>
          </div>
        </div>
      </div>
    </section>

    {/* Customer Reviews Section */}
    <ReviewsSection reviews={featuredReviews.slice(0, 6)} />

    {/* Gift Cards Section */}
    <section class="py-16 bg-gradient-to-r from-secondary/10 to-secondary/5">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <div class="bg-secondary/10 w-24 h-24 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-12 h-12 text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <h2 class="text-3xl font-bold mb-4">Give the Gift of Great Times</h2>
          <p class="text-lg text-muted-foreground mb-8">
            WH Pubs gift cards are perfect for any occasion. Treat your loved ones to memorable moments at any of our traditional British pubs.
          </p>
          <a href="/gift-cards">
            <Button size="lg" variant="secondary" className="bg-secondary text-primary hover:bg-secondary/90">
              Buy Gift Cards
            </Button>
          </a>
        </div>
      </div>
    </section>



    {/* Newsletter Section */}
    <section class="bg-primary py-16">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl font-bold text-secondary mb-4">Stay Updated</h2>
        <p class="text-secondary/80 mb-8">Subscribe to our newsletter for the latest news and special offers.</p>
        <form 
          name="newsletter" 
          method="POST" 
          action="/thank-you"
          data-netlify="true" 
          data-netlify-honeypot="bot-field"
          class="max-w-md mx-auto flex gap-4"
        >
          <input type="hidden" name="form-name" value="newsletter" />
          <p class="hidden">
            <label>Don't fill this out if you're human: <input name="bot-field" /></label>
          </p>
          <input
            type="email"
            name="email"
            placeholder="Enter your email"
            required
            class="flex-1 px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-secondary bg-secondary/10 text-secondary placeholder:text-secondary/50 border border-secondary/20"
          />
          <Button type="submit" variant="secondary" class="bg-[#B79C64] text-primary hover:bg-[#B79C64]/90">Subscribe</Button>
        </form>
      </div>
    </section>

  </main>
</Layout>