---
import Layout from '@/layouts/Layout.astro';
import { getPubs, getPubBySlug, getPosts, getMenusForPub, getEvents } from '@/lib/sanity';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { MapPin, Clock, Phone, UtensilsCrossed, CalendarDays, Image as ImageIcon, ExternalLink, Calendar } from 'lucide-react';
import ImageGallery from '@/components/ImageGallery';
import { PubHeroCarousel } from '@/components/PubHeroCarousel';
import GoogleMapEmbed from '@/components/GoogleMapEmbed';
import SanityPortableText from '@/components/SanityPortableText.jsx';
import BlogCard from '@/components/BlogCard.astro';

// 1. Generate routes for all pubs
// This page will exist in each deployment, but getStaticPaths ensures
// only the relevant pub page is built if TARGET_PUB_SLUG is set during build.
// In dev mode, it builds all pub pages found.
export async function getStaticPaths() {
  const targetPubSlug = import.meta.env.TARGET_PUB_SLUG;
  // Environment variable check handled silently in production
  let pubsToBuild = [];

  if (targetPubSlug) {
    // If building a specific pub site, only fetch and build that pub's page
    // Fetching data for specific pub slug
    const singlePub = await getPubBySlug(targetPubSlug);
    // Data fetched for specific pub
    if (singlePub) {
      pubsToBuild.push(singlePub);
    } else {
       // Pub not found for specified slug - build will fail
       throw new Error(`Pub not found for slug: ${targetPubSlug}`);
    }
  } else {
    // If building the main hub site, don't build any pub pages
    // They are hosted on separate domains
    pubsToBuild = [];
  }

  return pubsToBuild.map((pub) => ({
    params: { slug: pub.slug.current },
    props: { pub },
  }));
}

// 2. Get the specific pub data for this page
const { pub } = Astro.props;

// Basic error handling if pub data isn't found for the slug
if (!pub) {
  return Astro.redirect('/404');
}

// 3. Fetch all related data for this pub
const [relatedPosts, pubMenus, pubEvents] = await Promise.all([
  getPosts(pub.slug.current),
  getMenusForPub(pub.slug.current),
  getEvents(pub.slug.current)
]);

const pageTitle = `${pub.name} - WH Pubs`;
const pageDescription = pub.description || `Learn more about ${pub.name}, one of our fine establishments.`;
---

<Layout title={pageTitle} description={pageDescription} pub={pub}> {/* Pass pub data to Layout */}
  <main> {/* Remove container/padding from main, apply later */}
    <!-- Hero Section with Carousel -->
    {pub.carouselImages && pub.carouselImages.length > 0 ? (
      <section class="relative h-[50vh] sm:h-[60vh] md:h-[70vh] lg:h-[75vh] w-full">
        <PubHeroCarousel 
          images={pub.carouselImages}
          pubName={pub.name}
          client:load
        />
      </section>
    ) : (
      <!-- Fallback to single hero image if no carousel images -->
      <section class="relative h-[50vh] sm:h-[60vh] md:h-[70vh] lg:h-[75vh] w-full">
        <img
          src={pub.heroImage?.asset?.url || '/images/hero-fallback.jpg'}
          alt={pub.heroImage?.alt || `Hero image for ${pub.name}`}
          class="absolute inset-0 w-full h-full object-cover"
          onerror="this.onerror=null; this.src='/images/hero-fallback.jpg';"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent"></div>

        <div class="relative z-10 h-full flex flex-col items-center justify-center text-center text-white px-6">
          {pub.heroOverlayText && (
            <div class="prose prose-invert prose-xl md:prose-2xl mb-6 text-shadow-md">
               <p>{pub.heroOverlayText}</p>
            </div>
          )}
          {pub.heroOverlayButtonText && pub.heroOverlayButtonLink && (
            <a href={pub.heroOverlayButtonLink} target="_blank" rel="noopener noreferrer">
               <Button variant="secondary" size="lg" class="bg-[#B79C64] hover:bg-[#B79C64]/90 text-primary font-semibold px-8 py-3 shadow-lg">
                 {pub.heroOverlayButtonText}
               </Button>
            </a>
          )}
        </div>
      </section>
    )}

    {/* Main Content Area */}
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12 md:py-16">
      <article class="max-w-4xl mx-auto">

      <!-- Pub Name -->
      <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold text-primary mb-4 text-center leading-tight">{pub.name}</h1>

      <!-- Location -->
      {pub.location && (
        <div class="flex items-center justify-center text-primary/70 mb-6"> {/* Centered and added bottom margin */}
          <MapPin class="w-5 h-5 mr-2" />
          <span>{pub.location}</span>
        </div>
      )}

      {/* Book Table CTA (Moved near top) */}
      {pub.reservationsUrl && (
        <div class="text-center mb-10"> {/* Centered and added bottom margin */}
          <a href={pub.reservationsUrl} target="_blank" rel="noopener noreferrer">
            <Button variant="default" size="lg" class="bg-green-600 hover:bg-green-700 text-white font-semibold px-8 py-3"> {/* Larger padding */}
              Book A Table
            </Button>
          </a>
        </div>
      )}

      {/* Removed original CTA location */}

      <!-- Description -->
      {pub.description && (
        <div class="prose prose-lg max-w-none text-primary/90 mb-8">
          <p>{pub.description}</p>
          {/* If description were Portable Text, you'd render it here */}
        </div>
      )}

      <!-- Opening Hours -->
      {pub.openingHours && (
        <Card className="mb-8 hover:shadow-xl transition-all duration-300 card-hover">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Clock className="w-5 h-5 mr-2 text-primary/80" />
              Opening Hours
            </CardTitle>
          </CardHeader>
          <CardContent>
            <pre class="whitespace-pre-wrap font-sans text-primary/90">{pub.openingHours}</pre>
          </CardContent>
        </Card>
      )}

      <!-- Food Serving Times -->
      {pub.foodServingTimes && (
        <Card className="mb-8 hover:shadow-xl transition-all duration-300 card-hover bg-gradient-to-br from-white to-secondary/5">
          <CardHeader>
            <CardTitle className="flex items-center">
              <UtensilsCrossed className="w-6 h-6 mr-3 text-primary/80" />
              Food Serving Times
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div class="flex flex-col md:flex-row md:gap-8 text-primary/90">
              {pub.foodServingTimes.split('\n').map((line, idx) => (
                <span key={idx} class="mb-1 md:mb-0 md:mr-4 px-3 py-1 rounded bg-secondary/20 font-medium inline-block">{line}</span>
              ))}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Contact Info */}
      {(pub.contactPhone || pub.location || pub.addressLine1) && (
        <Card className="mb-8 hover:shadow-xl transition-all duration-300 card-hover bg-gradient-to-br from-white to-primary/5">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Phone className="w-6 h-6 mr-3 text-primary/80" />
              Contact Us
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div class="grid md:grid-cols-2 gap-4">
              {pub.contactPhone && (
                <div class="flex items-center">
                  <Phone class="w-5 h-5 mr-3 text-primary/60" />
                  <div>
                    <p class="text-sm text-primary/70">Call us</p>
                    <a href={`tel:${pub.contactPhone.replace(/\s/g, '')}`} class="text-lg font-medium text-primary hover:text-secondary transition-colors no-underline">
                      {pub.contactPhone}
                    </a>
                  </div>
                </div>
              )}
              {(pub.location || pub.addressLine1) && (
                <div class="flex items-start">
                  <MapPin class="w-5 h-5 mr-3 text-primary/60 mt-1" />
                  <div>
                    <p class="text-sm text-primary/70">Find us</p>
                    <p class="font-medium text-primary">{pub.location}</p>
                    {pub.addressLine1 && <p class="text-sm text-primary/80">{pub.addressLine1}</p>}
                    {pub.postcode && <p class="text-sm text-primary/80">{pub.postcode}</p>}
                  </div>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Google Map */}
      {pub.googleMapEmbed?.iframe && (
        <Card className="mb-12 hover:shadow-xl transition-all duration-300 card-hover overflow-hidden">
          <CardHeader>
            <CardTitle className="flex items-center">
              <MapPin className="w-5 h-5 mr-2 text-primary/80" />
              Find Us
            </CardTitle>
          </CardHeader>
          <CardContent className="p-0">
            <GoogleMapEmbed 
              iframe={pub.googleMapEmbed.iframe} 
              className="w-full"
              client:load
            />
          </CardContent>
        </Card>
      )}

      <!-- Image Gallery -->
      {pub.gallery && pub.gallery.length > 0 && (
        <div class="mb-12">
          <h2 class="text-3xl font-semibold text-primary mb-6 flex items-center">
             <ImageIcon class="w-6 h-6 mr-3 text-primary/80" /> Gallery
          </h2>
          <div class="mt-6">
            <ImageGallery 
              images={pub.gallery} 
              showCategories={true}
              columns={3}
              className="gallery-enhanced"
            />
          </div>
        </div>
      )}

      {/* Menus Section */}
      {(pubMenus && pubMenus.length > 0) ? (
        <div class="mb-12">
          <h2 class="text-3xl font-semibold text-primary mb-6 flex items-center">
            <UtensilsCrossed class="w-6 h-6 mr-3 text-primary/80" /> Our Menus
          </h2>
          <div class="grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
            {pubMenus.map((menu) => (
              <Card className="hover:shadow-xl transition-all duration-300 card-hover">
                <CardHeader>
                  <CardTitle>{menu.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  {menu.menuContent && (
                    <div class="prose prose-sm max-w-none">
                      <SanityPortableText value={menu.menuContent} />
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      ) : (
        <div class="mb-12 p-8 bg-secondary/10 rounded-xl text-center">
          <UtensilsCrossed class="w-12 h-12 mx-auto mb-4 text-primary/40" />
          <h3 class="text-xl font-semibold text-primary mb-2">Menus Coming Soon</h3>
          <p class="text-primary/70">We're currently updating our menu selection. Please check back soon!</p>
        </div>
      )}

      {/* Events Section */}
      {(pubEvents && pubEvents.length > 0) ? (
        <div class="mb-12">
          <h2 class="text-3xl font-semibold text-primary mb-6 flex items-center">
            <CalendarDays class="w-6 h-6 mr-3 text-primary/80" /> Upcoming Events
          </h2>
          <div class="grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
            {pubEvents.map((event) => (
              <Card className="hover:shadow-xl transition-all duration-300 card-hover overflow-hidden">
                {event.image?.asset?.url && (
                  <div class="h-48 overflow-hidden img-hover-zoom">
                    <img
                      src={event.image.asset.url}
                      alt={event.image.alt || event.title}
                      class="w-full h-full object-cover"
                      loading="lazy"
                    />
                  </div>
                )}
                <CardHeader>
                  <div class="flex items-start justify-between">
                    <CardTitle className="text-lg">{event.title}</CardTitle>
                    {event.date && (
                      <Badge variant="secondary" className="ml-2">
                        <Calendar className="w-3 h-3 mr-1" />
                        {new Date(event.date).toLocaleDateString('en-GB', { 
                          day: 'numeric',
                          month: 'short',
                          year: 'numeric'
                        })}
                      </Badge>
                    )}
                  </div>
                </CardHeader>
                <CardContent>
                  {event.description && (
                    <div class="prose prose-sm max-w-none mb-4">
                      <SanityPortableText value={event.description} />
                    </div>
                  )}
                  {event.bookingUrl && (
                    <a href={event.bookingUrl} target="_blank" rel="noopener noreferrer" class="no-underline">
                      <Button size="sm" className="w-full hover:shadow-md">
                        Book Now
                        <ExternalLink className="w-4 h-4 ml-2" />
                      </Button>
                    </a>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      ) : (
        <div class="mb-12 p-8 bg-white/80 rounded-xl text-center shadow-sm">
          <CalendarDays class="w-12 h-12 mx-auto mb-4 text-primary/40" />
          <h3 class="text-xl font-semibold text-primary mb-2">No Upcoming Events</h3>
          <p class="text-primary/70">Check back soon for events at {pub.name}!</p>
        </div>
      )}

      <!-- Image Gallery -->
      {pub.gallery && pub.gallery.length > 0 && (
        <div class="mb-12">
          <h2 class="text-3xl font-semibold text-primary mb-4 border-b pb-2 flex items-center">
            <ImageIcon class="w-6 h-6 mr-3 text-primary/80" /> Gallery
          </h2>
          <div class="mt-6">
            <ImageGallery 
              images={pub.gallery} 
              showCategories={true}
              columns={3}
            />
          </div>
        </div>
      )}

      {/* Latest News Section */}
      {(relatedPosts && relatedPosts.length > 0) ? (
        <div class="mb-12">
          <h2 class="text-3xl font-semibold text-primary mb-6">Latest News from {pub.name}</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {relatedPosts.slice(0, 3).map((post) => (
              <BlogCard post={post} />
            ))}
          </div>
          {relatedPosts.length > 3 && (
            <div class="text-center mt-8">
              <a href="/blog" class="no-underline">
                <Button variant="outline">View All News</Button>
              </a>
            </div>
          )}
        </div>
      ) : (
        <div class="mb-12 p-8 bg-gray-50 rounded-xl text-center">
          <h3 class="text-xl font-semibold text-primary mb-2">Stay Tuned</h3>
          <p class="text-primary/70">News and updates from {pub.name} coming soon!</p>
        </div>
      )}

      <!-- External Website Link -->
      {pub.url && (
        <div class="mt-12 text-center">
          <a href={pub.url} target="_blank" rel="noopener noreferrer">
            <Button variant="outline" size="lg" class="border-primary text-primary hover:bg-primary hover:text-secondary"> <!-- Changed variant -->
              Visit {pub.name}'s Official Website
            </Button>
          </a>
        </div>
      )}

      <!-- Link back to homepage -->
      <!-- Link back to homepage -->
      <div class="mt-16 text-center">
        <a href="/" class="text-primary hover:underline">
          &larr; Back to All Establishments
        </a>
      </div>

    </article>
  </main>
</Layout>