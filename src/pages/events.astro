---
// src/pages/events.astro
import Layout from '@/layouts/Layout.astro';
import { getEvents, getPubBySlug } from '@/lib/sanity';
import { Button } from "@/components/ui/button";
import SanityPortableText from '@/components/SanityPortableText.jsx';
import { CalendarIcon, MapPin } from 'lucide-react'; // Example icons

// Determine the target pub for this build/request
const targetPubSlug = import.meta.env.TARGET_PUB_SLUG;

// Fetch the specific pub's data (needed for layout customization)
const pubData = targetPubSlug ? await getPubBySlug(targetPubSlug) : null;

// Fetch events: only for the target pub if specified, otherwise only general events
const events = await getEvents(targetPubSlug);

// Determine page title
const pageTitle = pubData ? `${pubData.name} - Events` : "Events - WH Pubs";
const pageDescription = pubData ? `Upcoming events at ${pubData.name}.` : "Upcoming events across WH Pubs.";

// Helper to format date
const formatEventDate = (dateString) => {
  if (!dateString) return 'Date TBC';
  try {
    return new Date(dateString).toLocaleDateString('en-GB', {
      weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true
    });
  } catch (e) {
    return 'Invalid Date';
  }
};
---

<Layout title={pageTitle} description={pageDescription} pub={pubData}>
  <main class="container mx-auto px-4 py-12 pt-28"> {/* Added padding-top */}
    <h1 class="text-4xl md:text-5xl font-bold text-primary mb-12 text-center">
      {pubData ? `Events at ${pubData.name}` : 'Upcoming Events'}
    </h1>

    {events && events.length > 0 ? (
      <div class="space-y-10 max-w-4xl mx-auto">
        {events.map(event => (
          <div class="flex flex-col md:flex-row gap-6 border border-secondary/20 rounded-lg p-6 shadow-sm bg-white overflow-hidden">
            {event.image && (
              <div class="md:w-1/3 flex-shrink-0">
                <img
                  src={event.image.asset?.url + '?w=400&h=400&fit=crop'}
                  alt={event.image.alt || `Image for ${event.title}`}
                  class="w-full h-48 md:h-full object-cover rounded"
                  loading="lazy"
                  onerror="this.onerror=null; this.src='https://via.placeholder.com/400';"
                />
              </div>
            )}
            <div class="flex-grow">
              <h2 class="text-2xl font-semibold text-secondary mb-2">{event.title}</h2>

              <div class="flex flex-wrap gap-x-4 gap-y-1 text-sm text-primary/70 mb-3">
                <span class="flex items-center">
                  <CalendarIcon class="w-4 h-4 mr-1.5" /> {formatEventDate(event.date)}
                </span>
                 <span class="flex items-center">
                  <MapPin class="w-4 h-4 mr-1.5" /> {event.locationOverride || pubData?.location || 'Location TBC'}
                </span>
              </div>

              {event.description && (
                <div class="prose prose-sm max-w-none mb-4">
                  <SanityPortableText value={event.description} client:load />
                </div>
              )}

              {event.bookingUrl && (
                <a href={event.bookingUrl} target="_blank" rel="noopener noreferrer">
                  <Button variant="outline" size="sm">
                    More Info / Book Now
                  </Button>
                </a>
              )}
            </div>
          </div>
        ))}
      </div>
    ) : (
      <p class="text-center text-lg text-primary/80 mt-16">
        {pubData ? `No upcoming events listed for ${pubData.name} right now.` : 'No general events listed currently. Check individual pub sites!'}
      </p>
    )}
  </main>
</Layout>